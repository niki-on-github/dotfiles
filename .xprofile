#!/bin/sh
# NOTE: wayland do not load specific files on graphical session login - workaround is to load .xprofile at login (e.g. add to sway config: `exec sh ~/.xprofile`)
# Description: This file runs when a DM logs you into a x11 graphical session.

# history clean up
[ -d $HOME/.local/share/okular/docdata ] && rm -rf $HOME/.local/share/okular/docdata &
[ -d $HOME/.local/share/gwenview/recentfolders ] && rm -rf $HOME/.local/share/gwenview/recentfolders &
[ -d $HOME/.local/share/RecentDocuments ] && rm -rf $HOME/.local/share/RecentDocuments &
[ -d $HOME/.cache/sxiv ] && rm -rf $HOME/.cache/sxiv &
[ -d $HOME/.cache/bunkus.org ] && rm -rf $HOME/.cache/bunkus.org &
[ -d $HOME/.config/bunkus.org ] && rm -rf $HOME/.config/bunkus.org &
[ -d $HOME/.cache/thumbnails ] && rm -rf $HOME/.cache/thumbnails &

# clean trash
if command -v trash-empty ; then
    trash-empty &
fi

# music deamon
if command -v mpd ; then
    pgrep mpd || mpd &
fi

if command -v easyeffects; then
    easyeffects --gapplication-service &
fi

# start nextcloud client if installed
# if command -v nextcloud ; then
#     pgrep nextcloud || nextcloud --background &
# fi

# limit audio volume at start
$HOME/.local/bin/volume-control --limit 50 &

if [[ "$XDG_SESSION_TYPE" = "x11" ]]; then
    if [[ "$XDG_SESSION_DESKTOP" != "KDE" ]] && [[ "$XDG_SESSION_DESKTOP" != "XFCE" ]]; then

        # Notification service
        if command -v dunst ; then
            # pgrep dunst || dunst -icon_path "$HOME/.config/dunst/icons/" &
            pgrep dunst || dunst &
        fi

        # Network service
        if command -v nm-applet; then
            pgrep nm-applet || nm-applet &
        fi

        # clipboard service
        if command -v clipmenud ; then
            pgrep clip || clipmenud &
        fi

        # use x11 compositor (transparent windows, blur background, ...) if not inside a VM
        if command -v picom ; then
            if ! grep -q "^flags.* hypervisor" /proc/cpuinfo ; then
                if ! pgrep picom; then
                    picom -b --experimental-backends --vsync || picom -b --experimental-backends
                fi
            fi
        fi

        if command -v aa-notify ; then
            aa-notify -p -s 1 -w 60 -f /var/log/audit/audit.log &
        fi

        # start usb mount helper if installed
        if command -v udiskie ; then
            pgrep udiskie || udiskie -A -n -s --file-manager="$TERMINAL --working-directory " &
        fi

        # auto lock screen
        # if command -v xidlehook ; then
        #     pgrep xidlehook || xidlehook --not-when-fullscreen --not-when-audio --timer 300 \
        #         'pgrep i3lock || notify-send -t 10000 -- "LOCKING screen in 30 seconds"' '' --timer 30 '~/.local/bin/x11-lock' '' &
        # fi

        # disable dpms
        if command -v xset ; then
            xset dpms 0 0 0
            xset -dpms
            xset s off
        fi

        # volume bar
        # if command -v xob ; then
        #     if ! pgrep xob; then
        #         rm -f /tmp/xobpipe
        #         mkfifo /tmp/xobpipe
        #         tail -f /tmp/xobpipe | xob -t 600 2>&1 >/dev/null &
        #     fi
        # fi

        # set german keymap
        if command -v setxkbmap ; then
            setxkbmap de
        fi

        # set key repeat rate
        if command -v xset ; then
            # delay speed
            xset r rate 225 40
        fi

        # Map the caps lock key to Shift_L, but when it is pressed only once, treat it as escape.
        if command -v xmodmap ; then
            xmodmap -e "keycode 66 = Shift_L"
            # killall xcape 2>/dev/null ; xcape -e 'Shift_L=Escape'
        fi

        # set default mouse cursor to left_ptr (~/.icons/default/cursors)
        if command -v xsetroot ; then
            xsetroot -cursor_name left_ptr
        fi

#         if command -v notify-send ; then
#             if grep "xmonad$" <<< "$DESKTOP_SESSION" >/dev/null; then
#                 [ -f /etc/pacman.d/hooks/recompile-xmonad.hook ] || notify-send "Xmonad" "Pacman hook for Xmonad is not installed (see ~/.config/pacman/hooks)"
#             fi
#         fi

        # create a .xrandr file in your directory to set a custom resolution e.g. with content: 'xrandr -s 3440x1440 -r 120'
        [[ -f ~/.xrandr ]] && bash ~/.xrandr

        # set wallpaper
        $HOME/.local/bin/x11-wallpaper random &
    fi
elif [[ "$XDG_SESSION_TYPE" = "wayland" ]]; then
    if [[ "$XDG_SESSION_DESKTOP" != "KDE" ]]; then

        # notificatio service
        if command -v mako ; then
            pgrep mako || mako &
        fi

        # network service
        if command -v nm-applet ; then
            pgrep nm-applet || GDK_BACKEND=x11 nm-applet --indicator &
        fi

        # clipboard service
        if command -v wl-paste ; then
            pgrep clip || wl-paste -t text --watch clipman store &
        fi

        # start usb mount helper if installed
        if command -v udiskie ; then
            pgrep udiskie || udiskie -A -n -s --appindicator --file-manager="$TERMINAL --working-directory " &
        fi
    fi
fi

# Filesystem Monitoring (Warning if storage is almost full)
if command -v notify-send ; then
    lsblk -P -p -o "FSUSE%,MOUNTPOINT" | grep -v "MOUNTPOINT=\"\"" | while read -r fuse mountpoint ; do [ "${fuse:8:-2}" -ge "95" ] && notify-send "Filesystem Monitoring" "Storage \"${mountpoint:12:-1}\" almost full (${fuse:8:-1})"; done
fi

[ ".xprofile" ]  # set exit code to 0
