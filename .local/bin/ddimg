#!/bin/bash

# pv wrapper to safely flash images to an SD-Card/USB-Drive
#
# Copyleft 2017 by Ignacio Nunez Hernanz (GPL licensed)
#
# Usage:
#   ddimg (-b <block size>) <img_file> <block_device>

print_usage() { echo "Usage: ~\$ `basename $0` (-b/--block-size <block_size>) <img_file> <block_device>"; }

ddimg()
{
  # parse arguments
  local OPTS
  OPTS=$( getopt -o hb: -l block-size: -l help -- "$@" 2>/dev/null )
  [[ $? -ne 0 ]] && { echo "error parsing arguments"; return 1; }
  eval set -- "$OPTS"

  while true; do
    case "$1" in
      -h|--help      ) print_usage; return 0 ;;
      -b|--block-size) local BS=$2; shift 2  ;;
      --)                    shift; break    ;;
    esac
  done

  # block size argument
  [[ "$BS" != "" ]] && local ARG="-B $BS"

  local IF="$1"
  local OF="$2"

  # checks
  type pv &>/dev/null || { echo "install pv first"    ; return 1; }
  [[ $# -ne 2 ]] && { print_usage                     ; return 1; }
  [[ -f "$IF" ]] || { echo "$IF does not exist"       ; return 1; }
  [[ -e "$OF" ]] || { echo "$OF does not exist"       ; return 1; }
  [[ -b "$OF" ]] || { echo "$OF is not a block device"; return 1; }
  awk '{ print $1 }' /proc/mounts | grep -q "$OF" && { echo "$OF is currently mounted"; return 1; }

  # CTRL-C trap
  cancel() { echo "cancelling..."; kill $PID; wait $PID; exit 1; }
  trap cancel SIGINT

  # flashing
  echo "flashing..."
  pv $ARG "$IF" > "$OF" &
  PID=$!
  wait $PID || return 1

  # syncing
  echo -n "syncing... " && sync && echo "done"
}

if [ "$EUID" -ne 0 ]; then
   echo -e "Pleas run as root"
   exit 1
fi

ddimg $@

