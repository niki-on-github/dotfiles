#!/bin/bash
# Description: Shell script that shows the received and transmitted network bytes per second on a specified interface.
# Usage: net-speed <interface>
#        e.g: net-speed eth0


# Global variables
interface=$1
received_bytes=""
old_received_bytes=""
transmitted_bytes=""
old_transmitted_bytes=""


# This function parses /proc/net/dev file searching for a line containing $interface data.
function get_bytes {
   line=$(cat /proc/net/dev | grep $interface | cut -d ':' -f 2 | awk '{print "received_bytes="$1, "transmitted_bytes="$9}')
   eval $line
}


# Function which calculates the speed using actual and old byte number (This function should be called each second).
function get_velocity {
   value=$1    
   old_value=$2

   let vel=$value-$old_value
   let velKB=$vel/1000
   let velMB=$vel/1000000
   if [ $velMB != 0 ]; then
      echo -n "$velMB MB/s";
   elif [ $velKB != 0 ]; then
      echo -n "$velKB KB/s";
   else
      echo -n "$vel B/s";
   fi
}

#error and quit if no interface specified
if (( $# != 1 )); then
   echo -e "Usage: `basename $0` [NET_INTERFACE]"
   echo -n "Available Interfaces: "
   ls /sys/class/net
   exit 1
fi

# init variables
get_bytes
old_received_bytes=$received_bytes
old_transmitted_bytes=$transmitted_bytes


# Main loop. It will repeat forever (use Crtl+c to quit).
while true; do

   # Get new transmitted and received byte number values.
   get_bytes

   # Calculates speeds.
   vel_recv=$(get_velocity $received_bytes $old_received_bytes)
   vel_trans=$(get_velocity $transmitted_bytes $old_transmitted_bytes)

   #clear current line (\033[2K), move cursor back to start (\r)
   echo -en "\033[2K\r"

   # Shows results in the console.
   printf "%6s DOWN:%10s\tUP:%10s\r" "$interface" "$vel_recv" "$vel_trans"

   # Update old values to perform new calculations.
   old_received_bytes=$received_bytes
   old_transmitted_bytes=$transmitted_bytes

   # Waits one second.
   sleep 1;

done 
