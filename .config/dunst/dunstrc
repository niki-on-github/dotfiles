# dunst config

[global]

    ### Display ###

    # Which monitor should the notifications be displayed on.
    monitor = 0

    # Display notification on focused monitor.  Possible modes are:
    #   mouse: follow mouse pointer
    #   keyboard: follow window with keyboard focus
    #   none: don't follow anything
    follow = none

    # The geometry of the window:
    #   [{width}]x{height}[+/-{x}+/-{y}]
    # The geometry of the message window.
    # The height is measured in number of notifications everything else
    # in pixels.  If the width is omitted but the height is given
    # ("-geometry x2"), the message window expands over the whole screen
    # (dmenu-like).  If width is 0, the window expands to the longest
    # message displayed.  A positive x is measured from the left, a
    # negative from the right side of the screen.  Y is measured from
    # the top and down respectively.
    # The width can be negative.  In this case the actual width is the
    # screen width minus the width defined in within the geometry option.
    geometry = "435x8-5-5"

    # Show how many messages are currently hidden (because of geometry).
    indicate_hidden = yes

    # Shrink window if it's smaller than the width.
    shrink = no

    # The transparency of the window.  Range: [0; 100].
    transparency = 2

    # The height of the entire notification.
    notification_height = 50

    # (Vertical) Padding between text and separator.
    padding = 30

    # Horizontal padding.
    horizontal_padding = 30

    # Defines width in pixels of frame around the notification window.
    frame_width = 2

    # Defines color of the frame around the notification window.
    frame_color = "#1793D1"

    # Draw a line of "separator_height" pixel height between two notifications.
    separator_height = 2

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else will be interpreted as a X color.
    separator_color = frame

    # Sort messages by urgency.
    sort = yes

    # Don't remove messages (idle_threshold in seconds), if the user is idle (no mouse or keyboard input)
    idle_threshold = 120


    ### Text ###

    font = Hack 12

    # The spacing between lines.
    line_height = 1

    # Markup:
    # - full: Allow a small subset of html markup in notifications: <b>bold</b>, <i>italic</i>, <u>underline</u>
    # - strip: Dunst will try to strip the markup.
    # - no:    Disable markup parsing, incoming notifications will be treated as plain text.
    markup = full

    # The format of the message:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    format = "<b>%s</b>\n%b"

    # Alignment of message text. (Possible values are "left", "center" and "right")
    alignment = left

    # Show age of message if message is older than show_age_threshold seconds.
    show_age_threshold = 60

    # Split notifications into multiple lines if they don't fit into geometry.
    word_wrap = yes

    # When word_wrap is set to no, specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = middle

    # Ignore newlines '\n' in notifications.
    ignore_newline = no

    # Stack together notifications with the same content
    stack_duplicates = true

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = no


    ### Icons ###

    # Align icons left/right/off
    icon_position = left

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 64

    # Paths to default icons.
    icon_path = /usr/share/icons/breeze-dark/status/64/
    # NOTE: ~ or $HOME not work in this config, workaround start dunst with: `dunst -icon_path "$HOME/.config/dunst/icons/"`


    ### History ###

    # Should a notification popped up from history be sticky or timeout as if it would normally do.
    sticky_history = yes

    # Maximum amount of notifications kept in history
    history_length = 20


    ### Misc/Advanced ###

    # dmenu path.
    dmenu = /usr/local/bin/dmenu -p "dunst >"

    # Browser for opening urls in context menu.
    browser = /usr/bin/firefox -new-tab

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true

    # Define the title of the windows spawned by dunst
    title = Dunst

    # Define the class of the windows spawned by dunst
    class = Dunst

    # Print a notification on startup.
    startup_notification = false

    # Manage dunst's desire for talking
    # Can be one of the following values:
    #  crit: Critical features. Dunst aborts
    #  warn: Only non-fatal warnings
    #  mesg: Important Messages
    #  info: all unimportant stuff
    # debug: all less than unimportant stuff
    verbosity = mesg

    # Define the corner radius of the notification window in pixel size.
    corner_radius = 0

    # Enable compatibility with older nVidia drivers
    force_xinerama = false


    ### Mouse ###

    # Defines action of mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: If the notification has exactly one action, or one is marked as default,
    #              invoke it. If there are multiple and no default, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    mouse_left_click = close_current
    mouse_middle_click = do_action
    mouse_right_click = close_all


# Experimental features that may or may not work correctly.
[experimental]
    # Calculate the dpi to use on a per-monitor basis.
    per_monitor_dpi = false


[shortcuts]
    # Shortcuts are specified as [modifier+][modifier+]...key
    # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2", "mod3" and "mod4" (windows-key).
    # Xev might be helpful to find names for keys.

    # Close notification.
    close = ctrl+space

    # Close all notifications.
    close_all = ctrl+shift+space

    # Context menu.
    context = ctrl+shift+period


[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    background = "#171717"
    foreground = "#bcbcbc"
    timeout = 16


[urgency_normal]
    # IMPORTANT: colors have to be defined in quotation marks.
    background = "#171717"
    foreground = "#ffffff"
    timeout = 16


[urgency_critical]
    # IMPORTANT: colors have to be defined in quotation marks.
    background = "#171717"
    foreground = "#ff0000"
    frame_color = "#ff0000"
    timeout = 0


# vim: ft=cfg
